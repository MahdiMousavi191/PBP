@model SearchChangesHistoryViewModel

@{
    ViewData["Title"] = @Localizer["ChangesHistory"];
}

<div class="Container p-3">

    <h1 class="mt-4">
        @Localizer["ChangesHistory"]
        &nbsp; <i class="bi bi-hourglass"></i>
    </h1>
    <hr />

    @if (ViewData.ModelState.ErrorCount > 0)
    {
        <div id="error-alert" class="alert alert-danger d-flex align-items-center p-3 rounded shadow-lg animate-fade-in">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <ul class="mb-0">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
            <button type="button" class="btn-close ms-3 close-error-btn"></button>
        </div>
    }

    <div class="row mt-5">
        <form method="get" class="d-flex align-items-center gap-3">
            <div class="form-group" style="width: 14rem;">
                @{
                    var fieldName = Localizer["FieldName"].Value;
                }
                @Html.DropDownListFor(m => m.FieldName, ViewBag.FieldNames as List<SelectListItem>, fieldName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <input asp-for="Content" class="form-control" placeholder="@Localizer["Content"]" />
            </div>
            <div class="form-group">
                <input asp-for="StartDate" id="startDate" class="form-control" placeholder="@Localizer["FromDate"]" />
            </div>
            <div class="form-group">
                <input asp-for="EndDate" id="endDate" class="form-control" placeholder="@Localizer["ToDate"]" />
            </div>
            <div class="form-group">
                <input asp-for="StartTime" class="form-control" placeholder="@Localizer["FromTime"]" />
            </div>
            <div class="form-group">
                <input asp-for="EndTime" class="form-control" placeholder="@Localizer["ToTime"]" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    @Localizer["Search"]     
                </button>
            </div>
            <div class="form-group">
                <a class="btn btn-success no-underline" asp-controller="Contacts" asp-action="ChangesHistory">
                    @Localizer["Reset"]  
                </a>
            </div>
        </form>
    </div>

    <table class="table table-striped mt-5">
        <thead>
            <tr class="table-info">
                <th>@Localizer["FieldName"]</th>
                <th>@Localizer["OldValue"]</th>
                <th>@Localizer["NewValue"]</th>
                <th>@Localizer["ChangedDate"]</th>
                <th>@Localizer["ChangedTime"]</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.ContactChangeHistorys != null)
            {
                @foreach (var item in Model.ContactChangeHistorys)
                {
                    <tr>
                        <td>@item.FieldName.GetDisplayName()</td>

                        @if (item.FieldName == FieldName.Name || item.FieldName == FieldName.PhoneNumber)
                        {
                            <td>@item.OldValue</td>
                            <td>@item.NewValue</td>
                        }
                        @if (item.FieldName == FieldName.BirthDate)
                        {
                            var oldValue = Convert.ToDateTime(item.OldValue);
                            var newValue = Convert.ToDateTime(item.NewValue);
                            <td>@oldValue.ToString("yyyy/MM/dd")</td>
                            <td>@newValue.ToString("yyyy/MM/dd")</td>
                        }
                        @if (item.FieldName == FieldName.Image)
                        {
                            <td>
                                @if (item.OldImage != null)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.OldImage)" width="50" />
                                }
                            </td>
                            <td>
                                @if (item.NewImage != null)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.NewImage)" width="50" />
                                }
                            </td>
                        }

                        <td>@item.ChangedDate.ToString("yyyy/MM/dd")</td>
                        <td>@item.ChangedTime</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function() {
            $("#startDate").pDatepicker({
                initialValue: false,
                format: "YYYY/MM/DD",
                autoClose: true,
            });
            $("#endDate").pDatepicker({
                initialValue: false,
                format: "YYYY/MM/DD",
                autoClose: true,
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            let errorAlert = $("#error-alert");
            if (errorAlert.length) {
                setTimeout(function () {
                    errorAlert.fadeOut(300, function () {
                        $(this).remove();
                    });
                }, 10000);
            }
            $(".close-error-btn").on("click", function () {
                errorAlert.fadeOut(300, function () {
                    $(this).remove();
                });
            });
        });
    </script>

    <script>
        $(document).ready(function() {
            $('select').on('change', function() {
                if ($(this).val() !== "") {
                    $(this).find('option[value=""]').prop('disabled', true);
                }
            });
        });
    </script>
}